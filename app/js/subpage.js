"use strict";function renderView(t){var e=document.getElementById(t.templateId).textContent,a=Handlebars.compile(e),n=t.data,s=document.getElementById(t.targetId),r=a(n);s.innerHTML=r}var offersList={};offersList={totalPages:null,currentPage:1,baseUrl:"http://camp.efigence.com/camp/api/places?page=",buttonsLimit:10,activeButtonIndex:0,init:function(){this.getData().done(function(t){this.totalPages=t.total_pages,this.renderOffersList(t),this.showPaginationButtons(),this.changePaginationClasses(),this.addPaginationListeners();var e=document.getElementsByClassName("pagination__wrap")[0];e.scrollIntoViewIfNeeded(!0)}).error(function(t){this.renderOffersError(t)})},getData:function(){return $.ajax({context:offersList,method:"GET",url:this.baseUrl+this.currentPage})},renderOffersList:function(t){renderView({templateId:"offers-template",data:t,targetId:"offers"})},renderOffersError:function(t){renderView({templateId:"offers-template--error",data:t,targetId:"offers"})},showPaginationButtons:function(){for(var t=Math.min(this.totalPages,this.buttonsLimit),e=document.getElementsByClassName("buttons-next-prev__wrap"),a=Array.apply(null,new Array(t)).map(Number.prototype.valueOf,0),n=0,s=e.length;s>n;n++)e[n].classList.remove("hidden");renderView({templateId:"pagination-button",data:{buttonsCount:a},targetId:"pagination__buttons-list"})},goToPage:function(t){return this.checkPageRange(t)?void this.getData().done(function(t){this.renderOffersList(t),this.renumberButtons(),this.changePaginationClasses()}).error(function(t){this.renderOffersError(t)}):!1},checkPageRange:function(t){var e;if(t.page&&t.offset||!t.page&&!t.offset)return!1;switch(e=t.page||this.currentPage+t.offset,!0){case e===this.currentPage:return!1;case e>this.totalPages:return!1;case 1>e:return!1;default:return this.currentPage=e,!0}},changePaginationClasses:function(){for(var t,e=document.getElementsByClassName("pagination__button"),a=document.getElementsByClassName("buttons-next-prev__wrap")[0],n=document.getElementsByClassName("buttons-next-prev__wrap")[1],s="buttons-next-prev__wrap--inactive",r=0,i=e.length;i>r;r++)e[r].classList.remove("pagination__button--active");t=(this.currentPage-1)%this.buttonsLimit,e[t].classList.add("pagination__button--active"),1===this.currentPage?a.classList.add(s):this.currentPage===this.totalPages?n.classList.add(s):(a.classList.remove(s),n.classList.remove(s))},renumberButtons:function(){var t=document.getElementsByClassName("pagination__button"),e=((this.currentPage-1)%this.buttonsLimit,t.length);if(this.currentPage!=e+1)return console.log("nie zadzialam"),!1;var a=0;a=Math.min(this.totalPages-this.currentPage+1,this.buttonsLimit),console.log("OFFSET: "+a);for(var n=0;e>n;n++)t[n].textContent=parseInt(t[n].dataset.page)+a},addPaginationListeners:function(){var t=document.getElementById("pagination__buttons-list"),e=document.getElementsByClassName("buttons-next-prev__wrap")[0],a=document.getElementsByClassName("buttons-next-prev__wrap")[1],n=this;t.addEventListener("click",function(t){n.goToPage({page:parseInt(t.target.dataset.page)})}),e.addEventListener("click",function(t){n.goToPage({offset:-1})}),a.addEventListener("click",function(t){n.goToPage({offset:1})})}},offersList.init(),function(){Handlebars.registerHelper("times",function(t,e){var a=new Array(t+1),n=a.join(e);return n}),Handlebars.registerHelper("increase",function(t,e){return t+e}),Handlebars.registerHelper("scoreDescription",function(t){var e="";switch(!0){case 3>=t:e="Fatalny";break;case t>3&&5>=t:e="Nie najlepszy";break;case t>5&&6.4>t:e="Przeciętny";break;case t>5&&6.5>=t:e="Przeciętny";break;case t>6.5&&8>=t:e="Bardzo dobry";break;case t>8&&9>t:e="Znakomity";break;default:e="Wybitny"}return e+" "+t}),Handlebars.registerHelper("isEqual",function(t,e){return t===e})}(),function(){var t,e,a;t={baseUrl:"//camp.efigence.com/camp/api/places?page=",getData:function(t){var e=this;return $.ajax({method:"GET",crossDomain:!0,url:e.baseUrl+t})}},a={totalPages:null,currentPage:1,maxNumberOfButtons:10,numberOfVisibleButtons:null,visiblePages:[],init:function(){var a=this;t.getData().done(function(t){a.totalPages=t.total_pages,a.numberOfVisibleButtons=Math.min(a.totalPages,a.maxNumberOfButtons);for(var n=0;n<a.numberOfVisibleButtons;n++)a.visiblePages.push(n+1);e.updateView({pageNumber:1,activeButtonIndex:0}),e.renderPagination(a.numberOfVisibleButtons),a.addListeners()})},updateVisiblePages:function(){var t,e=this.numberOfVisibleButtons,a=document.getElementsByClassName("pagination__button");if(this.visiblePages.indexOf(this.currentPage)>-1)return!1;t=this.visiblePages[0]>this.currentPage?Math.max(-this.currentPage,-e):Math.min(e,this.totalPages-this.currentPage+1);for(var n=0,s=e;s>n;n++)this.visiblePages[n]=this.visiblePages[n]+t,a[n].textContent=this.visiblePages[n],a[n].dataset.page=this.visiblePages[n]},updateStatus:function(t){var a,n;if(t.page&&t.offset||!t.page&&!t.offset)return!1;switch(a=t.page||this.currentPage+t.offset,!0){case a===this.currentPage:return!1;case a>this.totalPages:return!1;case 1>a:return!1;default:this.currentPage=a,this.updateVisiblePages(),n=this.visiblePages.indexOf(a),e.updateView({pageNumber:a,activeButtonIndex:n,totalPages:this.totalPages})}},addListeners:function(){var t=document.getElementById("pagination__buttons-list"),e=document.getElementsByClassName("buttons-next-prev__wrap")[0],a=document.getElementsByClassName("buttons-next-prev__wrap")[1],n=this;t.addEventListener("click",function(t){n.updateStatus({page:parseInt(t.target.dataset.page)})}),e.addEventListener("click",function(t){n.updateStatus({offset:-1})}),a.addEventListener("click",function(t){n.updateStatus({offset:1})})}},e={renderTemplate:function(t){var e=document.getElementById(t.templateId).textContent,a=Handlebars.compile(e),n=t.data,s=document.getElementById(t.targetId),r=a(n);s.innerHTML=r},renderOffersList:function(t){this.renderTemplate({templateId:"offers-template",data:t,targetId:"offers"})},renderOffersError:function(t){this.renderTemplate({templateId:"offers-template--error",data:t,targetId:"offers"})},renderPagination:function(t){var e,a;e=document.getElementsByClassName("buttons-next-prev__wrap"),a=Array.apply(null,new Array(t)).map(Number.prototype.valueOf,0);for(var n=0;2>n;n++)e[n].classList.remove("hidden");this.renderTemplate({templateId:"pagination-button",data:{buttonsCount:a},targetId:"pagination__buttons-list"})},updateView:function(e){var a=this;t.getData(e.pageNumber).done(function(t){a.renderOffersList(t),a.markActiveButton(e.activeButtonIndex),a.showHideNavButtons(e)}).error(function(t){a.renferOffersError(t)})},markActiveButton:function(t){for(var e="pagination__button--active",a=document.getElementsByClassName(e),n=document.getElementsByClassName("pagination__button"),s=0,r=a.length;r>s;s++)a[s].classList.remove(e);n[t].classList.add(e)},showHideNavButtons:function(t){var e=document.getElementsByClassName("buttons-next-prev__wrap"),a="buttons-next-prev__wrap--inactive",n=document.getElementsByClassName(a);if(t.pageNumber>1&&t.pageNumber<t.totalPages)for(var s=0,r=n.length;r>s;s++)n[s].classList.remove(a);else 1===t.pageNumber?e[0].classList.add(a):e[1].classList.add(a)}},a.init()}(),function(){var t=document.querySelector(".hamburger-button"),e=document.querySelector(".main-menu"),a="main-menu--collapsed",n="animated--scaleIn";animationCollapse="animated--scaleOut",animationDelay=300,t.addEventListener("click",function(){e.classList.contains(a)?(e.classList.toggle(a),e.classList.toggle(n)):(e.classList.toggle(n),e.classList.toggle(animationCollapse),setTimeout(function(){e.classList.toggle(a),e.classList.toggle(animationCollapse)},animationDelay)),t.classList.toggle("fa-bars"),t.classList.toggle("fa-times")})}();
//# sourceMappingURL=data:application/json;base64,