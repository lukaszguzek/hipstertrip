!function(){"use strict";Handlebars.registerHelper("times",function(e,t){var a=new Array(e+1),n=a.join(t);return n}),Handlebars.registerHelper("increase",function(e,t){return e+t}),Handlebars.registerHelper("scoreDescription",function(e){var t="";switch(!0){case 3>=e:t="Fatalny";break;case e>3&&5>=e:t="Nie najlepszy";break;case e>5&&6.4>e:t="Przeciętny";break;case e>5&&6.5>=e:t="Przeciętny";break;case e>6.5&&8>=e:t="Bardzo dobry";break;case e>8&&9>e:t="Znakomity";break;default:t="Wybitny"}return t+" "+e}),Handlebars.registerHelper("isEqual",function(e,t){return e===t})}(),function(){"use strict";var e,t,a;e={baseUrl:"//camp.efigence.com/camp/api/places?page=",getData:function(e){var t=this;return $.ajax({method:"GET",crossDomain:!0,url:t.baseUrl+e})}},a={totalPages:null,currentPage:1,maxNumberOfButtons:10,numberOfVisibleButtons:null,visiblePages:[],init:function(){var a=this;e.getData().done(function(e){a.totalPages=e.total_pages,a.numberOfVisibleButtons=Math.min(a.totalPages,a.maxNumberOfButtons);for(var n=0;n<a.numberOfVisibleButtons;n++)a.visiblePages.push(n+1);t.updateView({pageNumber:1,activeButtonIndex:0}),t.renderPagination(a.numberOfVisibleButtons),a.addListeners()})},updateVisiblePages:function(){var e,t=this.numberOfVisibleButtons,a=document.getElementsByClassName("pagination__button");if(this.visiblePages.indexOf(this.currentPage)>-1)return!1;e=this.visiblePages[0]>this.currentPage?Math.max(-this.currentPage,-t):Math.min(t,this.totalPages-this.currentPage+1);for(var n=0,s=t;s>n;n++)this.visiblePages[n]=this.visiblePages[n]+e,a[n].textContent=this.visiblePages[n],a[n].dataset.page=this.visiblePages[n]},updateStatus:function(e){var a,n;if(e.page&&e.offset||!e.page&&!e.offset)return!1;switch(a=e.page||this.currentPage+e.offset,!0){case a===this.currentPage:return!1;case a>this.totalPages:return!1;case 1>a:return!1;default:this.currentPage=a,this.updateVisiblePages(),n=this.visiblePages.indexOf(a),t.updateView({pageNumber:a,activeButtonIndex:n,totalPages:this.totalPages})}},addListeners:function(){var e=document.getElementById("pagination__buttons-list"),t=document.getElementsByClassName("buttons-next-prev__wrap")[0],a=document.getElementsByClassName("buttons-next-prev__wrap")[1],n=this;e.addEventListener("click",function(e){n.updateStatus({page:parseInt(e.target.dataset.page)})}),t.addEventListener("click",function(e){n.updateStatus({offset:-1})}),a.addEventListener("click",function(e){n.updateStatus({offset:1})})}},t={renderTemplate:function(e){var t=document.getElementById(e.templateId).textContent,a=Handlebars.compile(t),n=e.data,s=document.getElementById(e.targetId),i=a(n);s.innerHTML=i},renderOffersList:function(e){this.renderTemplate({templateId:"offers-template",data:e,targetId:"offers"})},renderOffersError:function(e){this.renderTemplate({templateId:"offers-template--error",data:e,targetId:"offers"})},renderPagination:function(e){var t,a;t=document.getElementsByClassName("buttons-next-prev__wrap"),a=Array.apply(null,new Array(e)).map(Number.prototype.valueOf,0);for(var n=0;2>n;n++)t[n].classList.remove("hidden");this.renderTemplate({templateId:"pagination-button",data:{buttonsCount:a},targetId:"pagination__buttons-list"})},updateView:function(t){var a=this;e.getData(t.pageNumber).done(function(e){a.renderOffersList(e),a.markActiveButton(t.activeButtonIndex),a.showHideNavButtons(t)}).error(function(e){a.renferOffersError(e)})},markActiveButton:function(e){for(var t="pagination__button--active",a=document.getElementsByClassName(t),n=document.getElementsByClassName("pagination__button"),s=0,i=a.length;i>s;s++)a[s].classList.remove(t);n[e].classList.add(t)},showHideNavButtons:function(e){var t=document.getElementsByClassName("buttons-next-prev__wrap"),a="buttons-next-prev__wrap--inactive",n=document.getElementsByClassName(a);if(e.pageNumber>1&&e.pageNumber<e.totalPages)for(var s=0,i=n.length;i>s;s++)n[s].classList.remove(a);else 1===e.pageNumber?t[0].classList.add(a):t[1].classList.add(a)}},a.init()}(),function(){var e=document.querySelector(".hamburger-button"),t=document.querySelector(".main-menu"),a="main-menu--collapsed",n="animated--scaleIn";animationCollapse="animated--scaleOut",animationDelay=300,e.addEventListener("click",function(){t.classList.contains(a)?(t.classList.toggle(a),t.classList.toggle(n)):(t.classList.toggle(n),t.classList.toggle(animationCollapse),setTimeout(function(){t.classList.toggle(a),t.classList.toggle(animationCollapse)},animationDelay)),e.classList.toggle("fa-bars"),e.classList.toggle("fa-times")})}();
//# sourceMappingURL=data:application/json;base64,